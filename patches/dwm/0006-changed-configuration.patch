From 28fb01c075aec494e09f2c51f91532556ccfb59c Mon Sep 17 00:00:00 2001
From: paradigm <paradigm@bedrocklinux.org>
Date: Sat, 29 Dec 2012 17:35:45 -0500
Subject: [PATCH 06/10] changed configuration

---
 config.h |  160 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 files changed, 160 insertions(+), 0 deletions(-)
 create mode 100644 config.h

diff --git a/config.h b/config.h
new file mode 100644
index 0000000..fe86efa
--- /dev/null
+++ b/config.h
@@ -0,0 +1,160 @@
+/* See LICENSE file for copyright and license details. */
+
+#include "push.c"
+
+/* appearance */
+static const char font[]            = "-xos4-terminus-medium-r-normal-*-12-*-*-*-*-*-*-*";
+static const char normbordercolor[] = "#888888";
+static const char normbgcolor[]     = "#000000";
+static const char normfgcolor[]     = "#ffffff";
+static const char selbordercolor[]  = "#ffffff";
+static const char selbgcolor[]      = "#ffffff";
+static const char selfgcolor[]      = "#000000";
+static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int snap      = 32;       /* snap pixel */
+static const Bool showbar           = True;     /* False means no bar */
+static const Bool topbar            = True;     /* False means bottom bar */
+
+/* tagging */
+static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+
+static const Rule rules[] = {
+	/* class      instance    title       tags mask     isfloating   monitor */
+	//{ "Gimp",     NULL,       NULL,       0,            True,        -1 },
+	//{ "Firefox",  NULL,       NULL,       1 << 8,       False,       -1 },
+	{ "<unknown>", "<unknown>", "<unknown>", 0, True, -1 }, // fullscreen flash
+};
+
+/* layout(s) */
+static const float mfact      = 0.55; /* factor of master area size [0.05..0.95] */
+static const int nmaster      = 1;    /* number of clients in master area */
+static const Bool resizehints = False; /* True means respect size hints in tiled resizals */
+
+static const Layout layouts[] = {
+	/* symbol     arrange function */
+	{ "[]=",      tile },    /* first entry is default */
+	{ "><>",      NULL },    /* no layout function means floating behavior */
+	{ "[M]",      monocle },
+};
+
+/* key definitions */
+#define MODKEY Mod1Mask
+#define TAGKEYS(KEY,TAG) \
+	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
+	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
+	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },
+
+/* helper for spawning shell commands in the pre dwm-5.0 fashion */
+#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
+
+/* commands */
+static const char *dmenucmd[] = { "dmenu_run", "-fn", font, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
+static const char *termcmd[]  = { "uxterm", NULL };
+//static const char *browsercmd[]  = { "firefox", NULL };
+static const char *browsercmd[]  = { "dwb", NULL };
+static const char *sdwmcmd[]  = { "sdwm", NULL };
+static const char *sopenboxcmd[]  = { "sopenbox", NULL };
+static const char *scompizcmd[]  = { "scompiz", NULL };
+static const char *vupcmd[]  = { "vup", NULL };
+static const char *vdowncmd[]  = { "vdown", NULL };
+static const char *vmaxcmd[]  = { "vmax", NULL };
+static const char *vmutecmd[]  = { "vmute", NULL };
+static const char *mopencmd[]  = { "mopen", NULL };
+static const char *mnextcmd[]  = { "mnext", NULL };
+static const char *mprevcmd[]  = { "mprev", NULL };
+static const char *mpausecmd[]  = { "mpause", NULL };
+static const char *togglemousecmd[]  = { "togglemouse", NULL };
+static const char *slockcmd[]  = { "slock", NULL };
+
+static Key keys[] = {
+	/* modifier                     key        function        argument */
+	// launch commands
+	{ ControlMask|ShiftMask,        XK_s,      spawn,          {.v = termcmd } },
+	{ ControlMask|ShiftMask,        XK_d,      spawn,          {.v = browsercmd } },
+	{ ControlMask|ShiftMask,        XK_r,      spawn,          {.v = dmenucmd } },
+	// switch window manager
+	{ ControlMask|ShiftMask,        XK_F12,    spawn,          {.v = sdwmcmd } },
+	{ ControlMask|ShiftMask,        XK_F11,    spawn,          {.v = sopenboxcmd } },
+	{ ControlMask|ShiftMask,        XK_F10,    spawn,          {.v = scompizcmd } },
+	// volume
+	{ ControlMask|ShiftMask,        XK_Down,   spawn,          {.v = vdowncmd } },
+	{ ControlMask|ShiftMask,        XK_Up,     spawn,          {.v = vupcmd } },
+	{ ControlMask|ShiftMask,        XK_Left,   spawn,          {.v = vmutecmd } },
+	{ ControlMask|ShiftMask,        XK_Right,  spawn,          {.v = vmaxcmd } },
+	// music shortcuts
+	{ ControlMask|ShiftMask,        XK_y,      spawn,          {.v = mopencmd } },
+	{ ControlMask|ShiftMask,        XK_u,      spawn,          {.v = mpausecmd } },
+	{ ControlMask|ShiftMask,        XK_i,      spawn,          {.v = mnextcmd } },
+	{ ControlMask|ShiftMask,        XK_o,      spawn,          {.v = mprevcmd } },
+	// misc
+	{ ControlMask|ShiftMask,        XK_F1,     spawn,          {.v = togglemousecmd } },
+	{ ControlMask|ShiftMask,        XK_Delete,spawn,        {.v = slockcmd } },
+	// move focus
+	{ ControlMask|ShiftMask,        XK_comma,  focusmon,       {.i = +1 } },
+	{ MODKEY,                       XK_comma,  focusmon,       {.i = +1 } },
+	{ ControlMask|ShiftMask,        XK_period, focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_period, focusmon,       {.i = -1 } },
+	{ ControlMask|ShiftMask,        XK_j,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
+	{ ControlMask|ShiftMask,        XK_k,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
+	// move windows
+	{ ControlMask|ShiftMask,        XK_n,      pushdown,       {0} },
+	{ MODKEY,                       XK_n,      pushdown,       {0} },
+	{ ControlMask|ShiftMask,        XK_p,      pushup,         {0} },
+	{ MODKEY,                       XK_p,      pushup,         {0} },
+	{ ShiftMask|MODKEY,             XK_comma,  tagmon,         {.i = +1 } },
+	{ ShiftMask|MODKEY,             XK_period, tagmon,         {.i = -1 } },
+	{ ControlMask|ShiftMask,        XK_a,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_a,      incnmaster,     {.i = +1 } },
+	{ ControlMask|ShiftMask,        XK_x,      incnmaster,     {.i = -1 } },
+	{ MODKEY,                       XK_x,      incnmaster,     {.i = -1 } },
+	{ ControlMask|ShiftMask,        XK_h,      setmfact,       {.f = -0.05} },
+	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
+	{ ControlMask|ShiftMask,        XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ ControlMask|ShiftMask,        XK_Return, zoom,           {0} },
+	{ MODKEY,                       XK_Return, zoom,           {0} },
+	// set layout
+	{ ControlMask|ShiftMask,        XK_t,      setlayout,      {.v = &layouts[0]} },
+	{ ControlMask|ShiftMask,        XK_f,      setlayout,      {.v = &layouts[1]} },
+	{ ControlMask|ShiftMask,        XK_m,      setlayout,      {.v = &layouts[2]} },
+	// miscellaneous
+	{ ControlMask|ShiftMask,        XK_q,      killclient,     {0} },
+	{ ControlMask|ShiftMask,        XK_v,      togglebar,      {0} },
+	{ ControlMask|ShiftMask,        XK_space,  togglefloating, {0} },
+	// tags
+	{ ControlMask|ShiftMask,        XK_Tab,    view,           {0} },
+	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
+	TAGKEYS(                        XK_1,                      0)
+	TAGKEYS(                        XK_2,                      1)
+	TAGKEYS(                        XK_3,                      2)
+	TAGKEYS(                        XK_4,                      3)
+	TAGKEYS(                        XK_5,                      4)
+	TAGKEYS(                        XK_6,                      5)
+	TAGKEYS(                        XK_7,                      6)
+	TAGKEYS(                        XK_8,                      7)
+	TAGKEYS(                        XK_9,                      8)
+	//{ MODKEY,                       XK_space,  setlayout,      {0} },
+	//{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+};
+
+/* button definitions */
+/* click can be ClkLtSymbol, ClkStatusText, ClkWinTitle, ClkClientWin, or ClkRootWin */
+static Button buttons[] = {
+	/* click                event mask      button          function        argument */
+	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
+	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
+	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
+	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
+	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
+	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
+	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
+	{ ClkTagBar,            0,              Button1,        view,           {0} },
+	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
+	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
+	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
+};
+
-- 
1.7.2.5

