#!/usr/bin/python

# simple script to get new mail indication this isn't the cleanest - hardcoded
# things like username and many assumptions about offlineimaprc formatting.
# Works for what I need, but if you want to use it, be sure you understand what
# it does and change it for your needs.

# - parses .offlineimaprc for email accounts (makes many assumptions)
# - prompts user for passwords (which are kept in RAM)
# - uses offlineimap+password information to check email regularly
# - creates/updates temporary file with this information for others to parse

import imaplib, re, getpass, time

file = open('/home/paradigm/.offlineimaprc','r')

host=""
username=""
password=""
accounts=[]
for line in file.readlines():
    if(line[0:9] == "[Account "):
        account=line[9:len(line)-2]
        host=""
        username=""
        password=""
    if(line[0:12] == "type = Gmail"):
        host="imap.gmail.com"
    if(line[0:12] == "remotehost ="):
        host=line[13:-1]
    if(line[0:12] == "remoteuser ="):
        username=line[13:-1]
    if(host!="" and username!="" and password==""):
        print account+" "+username+"/"+host
        password = getpass.getpass()
        accounts.append([account,host,username,password])
file.close()

while True:
    print ""
    print "Checking for new mail at ",
    print time.strftime("%a-%Y-%m-%d-%H%M",time.localtime())
    newmail = 0
    for account in accounts:
        print account[0]+"..."
        conn = imaplib.IMAP4_SSL(account[1], 993)
        conn.login(account[2], account[3])
        newmail += int(re.search("UNSEEN (\d+)", conn.status("INBOX", "(UNSEEN)")[1][0]).group(1))
    print str(newmail)+" new emails"

    file = open('/dev/shm/.paradigm-newmail','w')
    file.write(str(newmail))
    file.close()
    # sleep until the next hour
    time.sleep((60 - time.localtime()[4])*60-(time.localtime()[5]))
